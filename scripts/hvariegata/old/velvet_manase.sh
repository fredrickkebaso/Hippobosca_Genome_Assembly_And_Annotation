#!/bin/bash
#PBS -l select=1:ncpus=40:mpiprocs=40:mem=600gb
#PBS -q bigmem
#PBS -W group_list=bigmemq
#PBS -l walltime=24:00:00
#PBS -P CBBI1470	
#PBS -o /mnt/lustre/users/fkebaso/hippo/manase/assembly/results/velvet/velvet.out
#PBS -e /mnt/lustre/users/fkebaso/hippo/manase/assembly/results/velvet/velvet.err
#PBS -m abe
#PBS -M aloomanase@gmail.com
#PBS -N velvet_MB

# ---------------- Velvet Assembly ----------------

# De novo genome assembly of short reads

# ---------------- Requirements ------------------

echo "Creating output variables..."

basedir="/mnt/lustre/users/fkebaso/hippo/manase/assembly"
results="${basedir}/results/velvet"
# reads="/mnt/lustre/users/fkebaso/hippo/manase/assembly/arabiensis/mapping/arabiensis.fna_unmapped_reads.sam"
assembly_name="microsporidia_Mb_genome.fa"


 echo Remove output directory if it already exists

echo "Removing old output directory (if exists)..."
if [ -d ${results} ]; then
    rm -r ${results}
fi

mkdir -p "${results}"
touch "${results}/velvet.out" "${results}/velvet.err"

forward_read="${basedir}/arabiensis/mapping/umapped_Pool_J4-LB_1.fq.gz"
reverse_read="${basedir}/arabiensis/mapping/umapped_Pool_J4-LB_2.fq.gz"

# ---------------- Modules -----------------------

echo "Loading required modules..."

module load chpc/BIOMODULES
module load velvet/1.2.10_51

# -------------------Run ---------------------------

echo "Running velvet..."

echo "Recommended Version 1.2.10."

# Generate hash tables from the input sequence data
# Hash length is set to 51
# Input data is fastq
# Paired-end reads are in separate files
echo "Running velveth command..."

velveth "${results}" 41 -fastq.gz -shortPaired -separate "${forward_read}" "${reverse_read}"

# Construct the contigs from the hash tables generated by velveth
# Expected coverage is automatically estimated from the input data
# Coverage cutoff is set based on the expected coverage
# Insert size of the paired-end reads is 290
echo "Running velvetg command..."

velvetg "${results}" -exp_cov auto -cov_cutoff auto -ins_length 235

# Remove intermediate files
echo "Removing intermediate files..."
rm "${results}"/{Graph2,LastGraph,Log,PreGraph,Roadmaps,Sequences}

# Rename the generated assembly, contigs.fa to match the organism
echo "Renaming the generated assembly file..."
mv "${results}"/contigs.fa "${results}"/"${assembly_name}"

# Rename the stats file to match the organism
echo "Renaming the stats file..."
mv "${results}"/stats.txt "${results}"/"${assembly_name}"_stats.txt

echo "Completed assembling genome with Velvet successfully!"
