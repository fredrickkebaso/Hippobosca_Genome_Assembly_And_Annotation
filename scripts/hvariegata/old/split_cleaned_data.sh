#!/bin/bash

# input files
input1="/scratch/fkebaso/hippo/hvariegata_female/results/clean_reads/uncompressed/S1-Hvariegata-F.R1_val_1.fq"
input2="/scratch/fkebaso/hippo/hvariegata_female/results/clean_reads/uncompressed/S1-Hvariegata-F.R2_val_2.fq"

# output files
output1="${input1%.*}_chopped_R1.${input1##*.}"
output2="${input2%.*}_chopped_R2.${input2##*.}"

# calculate the number of lines in the input files
num_lines=$(wc -l < "$input1")
lines_per_part=$((num_lines / 20))

# split the input files into 100 parts and save to chopped files
# using pigz to compress each part using 50 cores
echo "Splitting input1 into ${lines_per_part} lines per part"
split --lines="$lines_per_part" \
      --numeric-suffixes=1 \
      --suffix-length=3 \
      --filter='pigz -p 64 > $FILE.gz' \
      "$input1" "${output1}_part"

echo "Splitting input2 into ${lines_per_part} lines per part"
split --lines="$lines_per_part" \
      --numeric-suffixes=1 \
      --suffix-length=3 \
      --filter='pigz -p 64 > $FILE.gz' \
      "$input2" "${output2}_part"

#Unzip the generated files 

echo "unzipping files..."

gunzip /scratch/fkebaso/hippo/hvariegata_female/results/clean_reads/uncompressed/*.gz


echo "Finished splitting and de-compressing the input files."



# The --lines option specifies how many lines each part should contain (i.e., lines_per_part). 
# The --numeric-suffixes=1 option adds a numeric suffix to each part file, starting from 1. 
# The --suffix-length=2 option specifies that the suffix should be two digits long (i.e., from "01" to "100"). 
# The --filter option allows us to pipe the output of split through pigz, which compresses each part file using 50 cores (-p 50) and saves it with a ".chopped.gz" extension. 
# The ::: operator specifies the input list for parallel, which is generated by the seq command. 
# The seq command generates a sequence of two-digit numbers from 1 to 100 (seq -f "%02g" 1 100), which are used as placeholders ({}) for the part numbers in the split and pigz commands. 
# The ::: operator separates the command and the input list, telling parallel to use the input list as arguments for the command. 
# The same command is repeated for the second input file.
